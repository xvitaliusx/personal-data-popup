// Cookie Popup Manager
class CookiePopup {
    constructor(config = {}) {
        this.popup = null;
        this.acceptBtn = null;
        this.cookieName = 'cookieConsent';
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ –ø–æ–ø–∞–ø–∞ —Å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        this.config = {
            // –¶–≤–µ—Ç–∞
            backgroundColor: '#ffffff',
            textColor: '#666666',
            buttonColor: '#4CAF50',
            buttonTextColor: '#ffffff',
            
            // –†–∞–∑–º–µ—Ä—ã –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            borderRadius: '12px',
            leftPosition: '20px',
            rightPosition: '20px',
            bottomPosition: '20px',
            
            // –¢–µ–Ω—å
            shadowColor: 'rgba(0,0,0,0.2)',
            shadowBlur: '30px',
            shadowOffset: '0 10px',
            
            // –®—Ä–∏—Ñ—Ç
            fontSize: '0.95rem',
            
            // –¢–µ–∫—Å—Ç
            message: '–ù–∞ —Å–∞–π—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ø–Ω–¥–µ–∫—Å –ú–µ—Ç—Ä–∏–∫–∞, —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Å–æ–æki–µ-—Ñ–∞–π–ª—ã –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ö. –ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∞–π—Ç, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å <a href="#" class="policy-link" target="_blank">–ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a>.',
            buttonText: '–û–ö',
            thankYouMessage: '–°–ø–∞—Å–∏–±–æ! –í—ã –ø—Ä–∏–Ω—è–ª–∏ —É—Å–ª–æ–≤–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.',
            
            // –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª–∏—Ç–∏–∫—É
            policyUrl: '#'
        };
        
        // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        Object.assign(this.config, config);
        
        this.injectStyles();
        this.createPopupHTML();
        this.init();
    }
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º CSS —Å—Ç–∏–ª–∏ –≤ head –¥–æ–∫—É–º–µ–Ω—Ç–∞
    injectStyles() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –ª–∏ —É–∂–µ —Å—Ç–∏–ª–∏
        if (document.getElementById('cookie-popup-styles')) {
            return;
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—Ç–µ–º–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –Ω–∞ 30%
        const darkenColor = (color, percent) => {
            const num = parseInt(color.replace("#", ""), 16);
            const amt = Math.round(2.55 * percent);
            const R = (num >> 16) - amt;
            const G = (num >> 8 & 0x00FF) - amt;
            const B = (num & 0x0000FF) - amt;
            return "#" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 +
                (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 +
                (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);
        };
        
        const darkButtonColor = darkenColor(this.config.buttonColor, 30);
        
        const styles = `
            .cookie-popup {
                position: fixed;
                bottom: ${this.config.bottomPosition};
                left: ${this.config.leftPosition};
                right: ${this.config.rightPosition};
                background: ${this.config.backgroundColor};
                border-radius: ${this.config.borderRadius};
                box-shadow: ${this.config.shadowOffset} ${this.config.shadowBlur} ${this.config.shadowColor};
                z-index: 1000;
                font-family: sans-serif;
                transform: translateY(100%);
                transition: transform 0.3s ease-in-out;
                max-width: 500px;
                margin: 0 auto;
            }
            
            .cookie-popup.show {
                transform: translateY(0);
            }
            
            .cookie-content {
                padding: 1.5rem;
                text-align: center;
            }
            
            .cookie-icon {
                font-size: 3rem;
                margin-bottom: 1rem;
            }
            
            .cookie-description {
                color: ${this.config.textColor};
                margin-bottom: 1.5rem;
                font-size: ${this.config.fontSize};
                line-height: 1.5;
            }
            
            .policy-link {
                color: ${this.config.buttonColor};
                text-decoration: underline;
                cursor: pointer;
                transition: color 0.3s ease;
            }
            
            .policy-link:hover {
                color: ${darkButtonColor};
                text-decoration: none;
            }
            
            .cookie-button-container {
                display: flex;
                justify-content: center;
            }
            
            .btn-ok {
                padding: 0.75rem 2rem;
                border: none;
                border-radius: 6px;
                font-size: 0.9rem;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.3s ease;
                background: ${this.config.buttonColor};
                color: ${this.config.buttonTextColor};
                min-width: 120px;
            }
            
            .btn-ok:hover {
                background: ${darkButtonColor};
                transform: translateY(-2px);
                box-shadow: 0 4px 8px ${this.config.shadowColor};
            }
            
            @media (max-width: 768px) {
                .cookie-popup {
                    left: 10px;
                    right: 10px;
                    bottom: 10px;
                }
                
                .cookie-content {
                    padding: 1rem;
                }
                
                .cookie-button-container {
                    flex-direction: column;
                    align-items: center;
                }
                
                .btn-ok {
                    width: 100%;
                    max-width: 200px;
                }
            }
        `;
        
        const styleElement = document.createElement('style');
        styleElement.id = 'cookie-popup-styles';
        styleElement.textContent = styles;
        document.head.appendChild(styleElement);
    }
    
    // –°–æ–∑–¥–∞–µ–º HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ø–∞–ø–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
    createPopupHTML() {
        // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ–ø–∞–ø–∞
        this.popup = document.createElement('div');
        this.popup.className = 'cookie-popup';
        this.popup.id = 'cookiePopup';
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ø–∞–ø–∞
        const cookieContent = document.createElement('div');
        cookieContent.className = 'cookie-content';
        
        // –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É
        const cookieIcon = document.createElement('div');
        cookieIcon.className = 'cookie-icon';
        cookieIcon.textContent = 'üç™';
        
        // –°–æ–∑–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        const cookieDescription = document.createElement('p');
        cookieDescription.className = 'cookie-description';
        cookieDescription.innerHTML = this.config.message.replace('#', this.config.policyUrl);  
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏
        const cookieButtonContainer = document.createElement('div');
        cookieButtonContainer.className = 'cookie-button-container';
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –û–ö
        this.acceptBtn = document.createElement('button');
        this.acceptBtn.className = 'btn-ok';
        this.acceptBtn.id = 'acceptCookies';
        this.acceptBtn.textContent = this.config.buttonText;
        
        // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        cookieButtonContainer.appendChild(this.acceptBtn);
        cookieContent.appendChild(cookieIcon);
        cookieContent.appendChild(cookieDescription);
        cookieContent.appendChild(cookieButtonContainer);
        this.popup.appendChild(cookieContent);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø–∞–ø –≤ body
        document.body.appendChild(this.popup);
    }
    
    init() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (!this.hasUserConsent()) {
            this.showPopup();
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è
        this.acceptBtn.addEventListener('click', () => this.handleAccept());
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–µ —Ä–∞–Ω–µ–µ
    hasUserConsent() {
        return localStorage.getItem(this.cookieName) !== null;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø–∞–ø —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    showPopup() {
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            this.popup.classList.add('show');
        }, 500);
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    hidePopup() {
        this.popup.classList.remove('show');
        
        // –£–¥–∞–ª—è–µ–º –ø–æ–ø–∞–ø –∏–∑ DOM –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            this.popup.style.display = 'none';
        }, 300);
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è cookies
    handleAccept() {
        this.saveUserChoice('accepted');
        this.hidePopup();
        this.showThankYouMessage(this.config.thankYouMessage);
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
    saveUserChoice(choice) {
        const consentData = {
            choice: choice,
            timestamp: new Date().toISOString(),
            userAgent: navigator.userAgent
        };
        
        localStorage.setItem(this.cookieName, JSON.stringify(consentData));
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    showThankYouMessage(message) {
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.className = 'notification';
        notification.textContent = message;
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: #4CAF50;
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 6px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            z-index: 1001;
            font-size: 0.9rem;
            max-width: 300px;
            transform: translateX(100%);
            transition: transform 0.3s ease-in-out;
        `;
        
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.style.transform = 'translateX(0)';
        }, 100);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => {
                document.body.removeChild(notification);
            }, 300);
        }, 3000);
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–≥–ª–∞—Å–∏—è
    getConsentStatus() {
        const consent = localStorage.getItem(this.cookieName);
        if (consent) {
            return JSON.parse(consent);
        }
        return null;
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ–≥–ª–∞—Å–∏—è (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    resetConsent() {
        localStorage.removeItem(this.cookieName);
        this.popup.style.display = 'block';
        this.showPopup();
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ø–∞–ø–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    const config = window.cookiePopupConfig || {};
    
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä CookiePopup —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    window.cookiePopup = new CookiePopup(config);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–±—Ä–æ—Å–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    window.resetCookieConsent = function() {
        window.cookiePopup.resetConsent();
    };
    
    console.log('Cookie Popup –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    console.log('–î–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ–≥–ª–∞—Å–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: resetCookieConsent()');
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å cookies
const CookieUtils = {
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ cookie
    setCookie: function(name, value, days = 365) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));
        document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/`;
    },
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ cookie
    getCookie: function(name) {
        const nameEQ = name + "=";
        const ca = document.cookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) === ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    },
    
    // –£–¥–∞–ª–µ–Ω–∏–µ cookie
    deleteCookie: function(name) {
        document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/;`;
    }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—ã –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
window.CookieUtils = CookieUtils;
